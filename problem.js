//! 1번
//? 콘솔창에서 Hello World를 출력
// console.log("Hello World!");

//! 2번
//? 변수를 선언하고 변수에 10을 할당
// let a = 10;

//! 3번
//? "Hello, "와 "Javascript!"를 결합하여 출력하세요
//* stringOne과 stringTwo에 문자열을 할당하고 콘솔창에 합쳐서 출력
// const stringOne = "Hello, ";
// const stringTwo = "Javascript!";
// console.log(stringOne + stringTwo);

//! 4번
//? 두 수를 더하는 함수를 작성하고 5와 10의 합을 계산
//* 함수의 파라미터로 a, b를 받고 return 값으로 a와 b의 합을 반환
// function add(a, b) {
//   return a + b;
// }
// console.log(add(5, 10));

//! 5번
//? for 반복문을 사용하여 1부터 10까지의 수를 출력하는 코드를 작성
//* for문으로 1부터 10까지 반복하여 i를 출력한다.
// for(let i = 1; i <= 10; i++) {
//   console.log(i);
// }

//! 6번
//? if문을 사용하여 어떤 변수가 짝수인지 홀수 인지 판별하는 코드 작성
//* 변수를 먼저 할당하고 나머지가 0인지 아닌지로 판단하여 짝수인지 홀수인지 판단
// let a = 3;

// if(a % 2 === 0) {
//   console.log("짝수");
// } else {
//   console.log("홀수")
// }

//! 7번
//? JavaScript에서 null과 undefined의 차이점을 설명
//* undefined는 변수에 아무것도 할당되지 않았을 때를 뜻하지만 null은 메모리는 할당되어 있지만 그 값이 빈 값일 때를 뜻한다.
// let a;
// let b = [null];
// console.log(b[0]);

//! 8번
//? 자바스크립트에서 식별자로 사용될 수 있는 예 3가지
//* 변수 식별자, 함수 식별자, 객체 식별자

//! 9번
//? const, let, var의 차이점을 설명하시오.
//* const:  한번 할당된 값을 변경할 수 없다. 
//* let, var는 재할당이 가능하다.
//* 하지만 const, let은 블록 스코프를 가지고 있다. var는 함수 스코프를 가지고 있어 외부에서도 호출이 가능하다.

//! 10번
//? 자바스크립트에서의 주석을 어떻게 작성하는지 예시
// 한줄 주석
/*
여러줄 주석 
*/

//! 11번
//? 자바스크립트에서 사용할 수 있는 특수문자(escape character)를 3가지 예시
//* `\"`를 사용하여 문자열 내에서 큰따옴표(`"`)를 표현할 수 있습니다.
//* `\'`를 사용하여 문자열 내에서 작은따옴표(`'`)를 표현할 수 있습니다.
//* `\`를 사용하여 문자열 내에서 역슬래시(`\`)를 표현할 수 있습니다.

//! 12번

//? "use strict"는 무엇이고, 어떻게 사용하는지 설명
